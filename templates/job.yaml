---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-kafkajob
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicas }} 
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      imagePullSecrets:
        - name: myregistrykey
      containers:
        - name: app-container
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            requests:
              memory: "{{ .Values.resources.requests.memory }}"
              cpu: "{{ .Values.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.resources.limits.memory }}"
              cpu: "{{ .Values.resources.limits.cpu }}"
          env:
            - name: KAFKA_USERNAME
              value: {{ .Values.kafka.username }}
            - name: KAFKA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-app-secret
                  key: KAFKA_PASSWORD
            - name: KAFKA_BROKER1
              value: {{ index .Values.kafka.brokers 0 }}
            - name: KAFKA_BROKER2
              value: {{ index .Values.kafka.brokers 1 }}
            - name: KAFKA_BROKER3
              value: {{ index .Values.kafka.brokers 2 }}
            - name: ZIP_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-app-secret
                  key: ZIP_URL
            - name: KAFKA_TOPIC
              value: {{ .Values.kafka.topic }}
      restartPolicy: Always 
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - {{ .Release.Name }}
              topologyKey: topology.kubernetes.io/zone
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: topology.kubernetes.io/zone
                    operator: Exists
